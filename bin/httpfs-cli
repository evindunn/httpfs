#!/usr/bin/env python3

import argparse
import socket
import sys

from httpfs.ssl import RSAKey, X509Cert


def main():
    ca_key_file = "ca.key"
    ca_crt_file = "ca.crt"
    server_key_file = "server.key"
    server_crt_file = "server.crt"

    parser = argparse.ArgumentParser()
    parser.add_argument("command", help="HttpFS command")
    args = parser.parse_args()

    if args.command == "gen-certs":
        try:
            do_gen_certs(
                ca_key_file,
                ca_crt_file,
                server_key_file,
                server_crt_file
            )
        except KeyboardInterrupt:
            return 1
    else:
        print("Unknown command", file=sys.stderr)
        return 1

    return 0


def do_gen_certs(ca_key_file, ca_crt_file, server_key_file, server_crt_file):
    country = input("Country: ").strip()
    state = input("State: ").strip()
    locality = input("City/Locality: ").strip()
    organization = "httpfs-server"

    # CA Key
    ca_key = RSAKey()
    ca_key.write(ca_key_file)
    print("CA private key written to {}".format(ca_key_file))

    # CA cert
    ca_crt = X509Cert(
        ca_key,
        country,
        state,
        locality,
        organization,
        "httpfs@{}".format(socket.getfqdn())
    )

    ca_crt.sign(ca_key)
    ca_crt.write(ca_crt_file)
    print("CA certificate written to {}".format(ca_crt_file))

    # Server key
    server_key = RSAKey()
    server_key.write(server_key_file)
    print("Server private key written to {}".format(ca_key_file))

    # Server cert
    server_crt = X509Cert(
        server_key,
        country,
        state,
        locality,
        organization,
        socket.getfqdn(),
        issuer=ca_crt.get_subject()
    )

    server_crt.sign(ca_key)
    server_crt.write(server_crt_file, [ca_crt])

    print("Server certificate written to {}".format(server_crt_file))


if __name__ == "__main__":
    sys.exit(main())
